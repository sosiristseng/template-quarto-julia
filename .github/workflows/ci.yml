name: Build notebooks and publish

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NPROC: '2' # Number of Julia processes to run the notebooks

jobs:
  setup:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.hash.outputs.id }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner	}}
        password: ${{ github.token	}}
    - name: Get docker image hash
      id: hash
      run: echo "id=${{ hashFiles('requirements.txt', 'Project.toml', 'Manifest.toml', 'src/**', 'env.Dockerfile') }}" >> "$GITHUB_OUTPUT"
    - name: Build and cache Docker container
      uses: docker/build-push-action@v5
      with:
        context: .
        file: 'env.Dockerfile'
        tags: ghcr.io/${{ github.repository }}:${{ steps.hash.outputs.id }}
        push: true
        cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:${{ steps.hash.outputs.id }}
        cache-to: type=inline

  execute:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}:${{ needs.setup.outputs.hash }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run program
        env:
          JULIA_PROJECT: '@.'
        run: julia --color=yes -p ${{ env.NPROC }} literate.jl
      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: notebooks
          path: docs/
          retention-days: 1

  render:
    needs: execute
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download notebooks
        uses: actions/download-artifact@v3
        with:
          name: notebooks
          path: out/
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: out
      - name: Copy back built notebooks
        run: cp --verbose -rf out/* docs/
      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
      - name: Render Quarto Project
        uses: quarto-dev/quarto-actions/render@v2
        with:
          to: html
          path: docs/
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v2
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          path: _site

  # CI conclusion for GitHub status check
  # Adaped from https://brunoscheufler.com/blog/2022-04-09-the-required-github-status-check-that-wasnt
  CI:
    needs: render
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [[ ${{ needs.render.result }} == "success" ]]; then
            echo "Tests passed"
            exit 0
          else
            echo "Tests failed"
            exit 1
          fi

  deploy:
    name: Deploy to GitHub pages
    needs: render
    if: ${{ github.ref == 'refs/heads/main'}}
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
