name: Build Website

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  execute:
    name: Execute notebooks
    runs-on: ubuntu-latest
    env:
      NPROC: '2'       # Number of Julia processes to run the notebooks
      JULIA_CACHE: '1' # Set this env var zero to disable caching
      GKSwstype: 100
      JULIA_NUM_THREADS: 'auto'
      JULIA_CONDAPKG_BACKEND: 'Null'
    container:
      image: python:3.11.4-slim
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python dependencies
        run: pip install --no-cache-dir -r requirements.txt
      - name: Read Julia version
        id: read_toml
        uses: SebRollen/toml-action@v1.0.2
        with:
          file: 'Manifest.toml'
          field: 'julia_version'
      - name: Setup Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ steps.read_toml.outputs.value }}
      - name: Restore Julia dependencies
        id: restore-cache
        uses: actions/cache/restore@v3
        if: ${{ env.JULIA_CACHE != '0'}}
        with:
          path: |
            ~/.julia
          key: ${{ runner.os }}-julia-${{ env.JULIA_CACHE }}-${{ hashFiles('Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ env.JULIA_CACHE }}-
      - name: Install Julia dependencies
        run: |
          julia --color=yes --project="" -e 'import Pkg; Pkg.Registry.update(); Pkg.add(["Literate", "PrettyTables"])'
          julia --color=yes --project=@. -e 'import Pkg; Pkg.instantiate(); Pkg.resolve(); Pkg.precompile(); Pkg.gc()'
      - name: Save Julia dependencies
        uses: actions/cache/save@v3
        if: ${{ steps.restore-cache.outputs.cache-hit != 'true' && env.JULIA_CACHE != '0' }}
        with:
          path: |
            ~/.julia
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
      - name: Build notebooks with ${{ env.NPROC }} processes
        run: JULIA_PROJECT=@. julia --color=yes -p ${{ env.NPROC }} literate.jl
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: notebooks
          path: docs

  quarto:
    needs: execute
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Remove existing docs folder
        run: rm -rf docs || true
      - name: Download built notebooks to replace the original
        uses: actions/download-artifact@v3
        with:
          name: notebooks
          path: docs/
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: docs/
      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
      - name: Render Quarto Project
        uses: quarto-dev/quarto-actions/render@v2
        with:
          to: html
          path: docs/
      - name: Upload artifact for GH pages
        uses: actions/upload-pages-artifact@v1
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          path: _site

  deploy:
    name: Deploy to GitHub pages
    needs: quarto
    if: ${{ github.ref == 'refs/heads/main'}}
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
