name: Build notebooks and publish

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NPROC: '2' # Number of Julia processes to run the notebooks
  PY_VER: '3.12'
  CACHE_NUM: '1'
  JULIA_NUM_THREADS: 'auto'
  JULIA_CONDAPKG_BACKEND: 'Null'
  JULIA_CI: 'true'

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PY_VER }}
    - name: Cache pip
      uses: actions/cache@v3
      id: cache-pip
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
    - name: Install python packages
      if: ${{ steps.cache-pip.outputs.cache-hit != 'true' }}
      run: pip install -r requirements.txt
    - name: Read Julia version
      uses: SebRollen/toml-action@v1.0.2
      id: read_toml
      with:
        file: 'Manifest.toml'
        field: 'julia_version'
    - name: Install Julia using jill.sh
      run: |
        wget -O /tmp/jill.sh https://raw.githubusercontent.com/abelsiqueira/jill/main/jill.sh
        bash /tmp/jill.sh --version ${{ steps.read_toml.outputs.value }} -y
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Cache Julia packages
      uses: actions/cache/restore@v3
      id: cache-julia
      with:
        path: |
          ~/.julia
          !~/.julia/registries
        key: ${{ runner.os }}-julia-${{ env.CACHE_NUM }}-${{ hashFiles('src/**','Project.toml', 'Manifest.toml')}}
        restore-keys: |
          ${{ runner.os }}-julia-${{ env.CACHE_NUM }}-
    - name: Install Julia packages
      if: ${{ steps.cache-julia.outputs.cache-hit != 'true' }}
      run: |
        julia --color=yes -e 'using Pkg; Pkg.add(["PrettyTables", "Literate"])'
        julia --project=@. --color=yes -e 'using Pkg, Dates; Pkg.instantiate(); Pkg.resolve(); Pkg.precompile(); Pkg.gc(collect_delay=Day(0))'
    - name: Save Julia packages
      uses: actions/cache/save@v3
      if: ${{ steps.cache-julia.outputs.cache-hit != 'true' }}
      with:
        path: |
          ~/.julia
          !~/.julia/registries
        key: ${{ steps.cache-julia.outputs.cache-primary-key }}
    - name: Run program
      env:
        JULIA_PROJECT: '@.'
        GKSwstype: '100'
      run: julia --color=yes -p ${{ env.NPROC }} literate.jl
    - name: Setup Quarto
      uses: quarto-dev/quarto-actions/setup@v2
    - name: Render Quarto Project
      uses: quarto-dev/quarto-actions/render@v2
      with:
        to: html # If set, it will be equivalent to `quarto render --to html`
        path: docs # By default, the current working dir is used i.e `quarto render .`
    - name: Upload pages artifact
      uses: actions/upload-pages-artifact@v2
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        path: _site/

  deploy:
    name: Deploy to GitHub pages
    needs: CI
    if: ${{ github.ref == 'refs/heads/main'}}
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
