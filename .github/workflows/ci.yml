name: Jupyter Book Website

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write
  contents: write
  pull-requests: write

jobs:
  jupyter-book:
    runs-on: ubuntu-latest
    env:
      NPROC: '2'
      JULIA_CACHE: '1'
    container:
      image: ghcr.io/sosiristseng/juliabook:1.8.5.4
      volumes:
        - /srv/juliapkgs
      env:
        JULIA_DEPOT_PATH: /srv/juliapkgs
        JULIA_NUM_THREADS: 'auto'
        JULIA_CONDAPKG_BACKEND: 'Null' # Let PythonCall use built-in python
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache Julia dependencies
        uses: actions/cache@v3
        if: ${{ env.JULIA_CACHE != '0'}}
        with:
          path: |
            /srv/juliapkgs
          key: ${{ runner.os }}-julia-${{ env.JULIA_CACHE }}-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ env.JULIA_CACHE }}-
      - name: Install Julia dependencies
        env:
          JULIA_PROJECT: ${{ github.workspace }}
        run: julia --color=yes -e 'import Pkg; Pkg.Registry.update(); Pkg.instantiate(); Pkg.resolve(); Pkg.precompile()'
      - name: Build notebooks with ${{ env.NPROC }} processes
        env:
          GKSwstype: 100
          JULIA_PROJECT: ${{ github.workspace }}
        run: julia --color=yes -p ${{ env.NPROC }} literate.jl
      - name: Build website
        run: jupyter-book build docs/
      - name: Copy binder environments
        run: |
          cp *.toml docs/_build/html/_sources
          cp -R src docs/_build/html/_sources
      - name: Deploy Notebooks
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html/
          force_orphan: true

  binder:
    needs: jupyter-book
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}:binder
      PYTHON_VER: '3.11'
    steps:
      - name: Checkout notebook branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          fetch-depth: 0
      - name: Setup Python ${{ env.PYTHON_VER }}
        uses: actions/setup-python@v4
        id: python
        with:
          python-version: ${{ env.PYTHON_VER }}
      - name: Install repo2docker
        run:
          pip install -U pip setuptools wheel
          pip install https://github.com/jupyterhub/repo2docker/archive/main.zip
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull Image
        run: docker pull ${{ env.IMAGE_NAME }} || true
      - name: Build binder image with repo2docker
        run: >
          jupyter-repo2docker
          --image-name ${{ env.IMAGE_NAME }}
          --cache-from ${{ env.IMAGE_NAME }}
          --push --no-run --user-id 1000 --user-name jovyan
          _sources
      - name: Add binder Dockerfile
        run: |
          mkdir -p .binder
          echo "FROM ${{ env.IMAGE_NAME }}" >> .binder/Dockerfile
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
